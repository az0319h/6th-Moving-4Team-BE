paths:
  /auth:
    get:
      tags: [Auth]
      summary: 사용자 정보 가져오기
      security:
        - bearerAuth: []
      responses:
        "200":
          description: 사용자 데이터 반환 성공

  /auth/refresh-token:
    post:
      tags: [Auth]
      summary: 토큰 재발급
      description: http 파일이나 postman으로 테스트 가능
      responses:
        "200":
          description: accessToken 갱신 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  accessToken:
                    type: string

  /auth/signup/mover:
    post:
      tags: [Auth]
      summary: 기사 회원가입
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SignUpRequest"
      responses:
        "201":
          description: Mover 회원가입 성공

  /auth/signin/mover:
    post:
      tags: [Auth]
      summary: 기사 로그인
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SignInRequest"
            example:
              email: mover1@gmail.com
              password: password1
      responses:
        "200":
          description: Mover 로그인 성공

  /auth/signup/client:
    post:
      tags: [Auth]
      summary: 일반 회원가입
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SignUpRequest"
      responses:
        "201":
          description: Client 회원가입 성공

  /auth/signin/client:
    post:
      tags: [Auth]
      summary: 일반 로그인
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SignInRequest"
            example:
              email: client1@gmail.com
              password: password1
      responses:
        "200":
          description: Client 로그인 성공

  /images/upload:
    post:
      tags: [Image]
      summary: 이미지 업로드
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                image:
                  type: string
                  format: binary
      responses:
        "201":
          description: 업로드 성공

  /notifications:
    get:
      tags: [Notification]
      summary: 알림 목록 조회
      security:
        - bearerAuth: []
      parameters:
        - name: cursor
          in: query
          schema:
            type: string
        - name: limit
          in: query
          schema:
            type: integer
      responses:
        "200":
          description: 조회 성공

  /notifications/{notificationId}:
    patch:
      tags: [Notification]
      summary: 알림 읽음 처리
      security:
        - bearerAuth: []
      parameters:
        - name: notificationId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: 읽음 처리 성공

  /profile/mover:
    patch:
      tags: [Profile]
      summary: 기사 프로필 등록 또는 수정
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MoverProfile"
      responses:
        "200":
          description: 수정 성공

  /profile/clients:
    patch:
      tags: [Profile]
      summary: 일반 회원 프로필 수정
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ClientProfileUpdate"
      responses:
        "200":
          description: 수정 성공

  /dashboard/edit/mover:
    patch:
      tags: [Account]
      summary: 기사 기본정보 수정
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/EditMoverAccount"
      responses:
        "200":
          description: 수정 성공

  /movers:
    get:
      tags: [Mover]
      summary: 기사 리스트 조회
      responses:
        "200":
          description: 조회 성공

  /movers/{moverId}:
    get:
      tags: [Mover]
      summary: 기사 상세 조회
      parameters:
        - name: moverId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: 조회 성공

    patch:
      tags: [Mover]
      summary: 기사 지정 요청
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            example:
              requestId: string
              moverId: string
      parameters:
        - name: moverId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: 지정 성공

  /movers/{moverId}/toggle-favorite:
    post:
      tags: [Mover]
      summary: 찜 토글
      security:
        - bearerAuth: []
      parameters:
        - name: moverId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: 토글 성공

  /favorites/me:
    get:
      tags: [Favorite]
      summary: 내가 찜한 기사 목록 조회
      security:
        - bearerAuth: []
      parameters:
        - name: page
          in: query
          schema:
            type: integer
        - name: limit
          in: query
          schema:
            type: integer
      responses:
        "200":
          description: 조회 성공

  /estimates/pending:
    get:
      tags: [Estimate]
      summary: 대기 중인 견적 조회
      security:
        - bearerAuth: []
      responses:
        "200":
          description: 조회 성공

  /estimates/create:
    post:
      tags: [Estimate]
      summary: 견적 생성 (기사 → 유저)
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateEstimate"
      responses:
        "201":
          description: 생성 성공

  /estimates/confirmed:
    post:
      tags: [Estimate]
      summary: 견적 확정 (유저 → 기사)
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ConfirmEstimate"
      responses:
        "200":
          description: 확정 성공

  /estimates/sent:
    get:
      tags: [Estimate]
      summary: 내가 보낸 견적 목록
      security:
        - bearerAuth: []
      responses:
        "200":
          description: 조회 성공

  /estimates/sented/{estimateId}:
    get:
      tags: [Estimate]
      summary: 보낸 견적 상세 조회
      security:
        - bearerAuth: []
      parameters:
        - name: estimateId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: 조회 성공

  /estimates/rejected:
    get:
      tags: [Estimate]
      summary: 반려된 견적 목록 조회
      security:
        - bearerAuth: []
      responses:
        "200":
          description: 조회 성공

  /estimates/received:
    get:
      tags: [Estimate]
      summary: 받은 견적 목록
      security:
        - bearerAuth: []
      responses:
        "200":
          description: 조회 성공

  /estimates/reject:
    post:
      tags: [Estimate]
      summary: 견적 거절
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RejectEstimate"
      responses:
        "200":
          description: 거절 성공

  /requests:
    post:
      tags: [Request]
      summary: 견적 요청 (유저 → 기사)
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateRequest"
      responses:
        "201":
          description: 생성 성공

    get:
      tags: [Request]
      summary: 받은 견적 요청 목록 (기사)
      security:
        - bearerAuth: []
      parameters:
        - name: moveType
          in: query
          required: false
          schema:
            type: string
        - name: isDesignated
          in: query
          required: false
          schema:
            type: boolean
        - name: serviceArea
          in: query
          required: false
          schema:
            type: string
        - name: keyword
          in: query
          required: false
          schema:
            type: string
        - name: sort
          in: query
          required: false
          schema:
            type: string
            enum: [moveDate, requestedAt]
        - name: cursor
          in: query
          required: false
          schema:
            type: string
        - name: limit
          in: query
          required: false
          schema:
            type: integer
      responses:
        "200":
          description: 조회 성공

  /requests/draft:
    get:
      tags: [Request]
      summary: 내 견적 요청 중간 상태 조회
      security:
        - bearerAuth: []
      responses:
        200:
          description: 견적 요청 초안 조회

    patch:
      tags: [Request]
      summary: 견적 요청 중간 상태 저장
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RequestDraft"
      responses:
        200:
          description: 견적 요청 중간 저장

  /requests/client:
    get:
      tags: [Request]
      summary: 보낸 견적 요청 목록 조회
      security:
        - bearerAuth: []
      parameters:
        - name: cursor
          in: query
          schema:
            type: string
        - name: limit
          in: query
          schema:
            type: integer
        - name: sort
          in: query
          schema:
            enum: ["desc", "asc"]
      responses:
        "200":
          description: 조회 성공

  /requests/client/active:
    get:
      tags: [Request]
      summary: 유저 활성 견적 요청 조회
      security:
        - bearerAuth: []
      responses:
        "200":
          description: 조회 성공

  /requests/{requestId}:
    get:
      tags: [Request]
      summary: 견적 요청 상세 조회
      security:
        - bearerAuth: []
      parameters:
        - name: requestId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: 요청 조회 성공

    delete:
      tags: [Request]
      summary: 견적 요청 취소
      security:
        - bearerAuth: []
      parameters:
        - name: requestId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: 요청 취소 성공

  /reviews/me:
    get:
      tags: [Review]
      summary: 내가 작성한 리뷰 목록
      security:
        - bearerAuth: []
      responses:
        "200":
          description: 조회 성공

  /reviews/writable:
    get:
      tags: [Review]
      summary: 작성 가능한 리뷰 목록
      security:
        - bearerAuth: []
      parameters:
        - name: page
          in: query
          schema:
            type: integer
        - name: limit
          in: query
          schema:
            type: integer
      responses:
        "200":
          description: 조회 성공

  /reviews:
    post:
      tags: [Review]
      summary: 리뷰 작성
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateReview"
      responses:
        "201":
          description: 작성 성공

  /reviews/{reviewId}:
    patch:
      tags: [Review]
      summary: 리뷰 수정
      security:
        - bearerAuth: []
      parameters:
        - name: reviewId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UpdateReview"
      responses:
        "200":
          description: 수정 성공

    delete:
      tags: [Review]
      summary: 리뷰 삭제
      security:
        - bearerAuth: []
      parameters:
        - name: reviewId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: 삭제 성공

components:
  schemas:
    SignUpRequest:
      type: object
      properties:
        name:
          type: string
          maxLength: 4
        email:
          type: string
          format: email
        phone:
          type: string
          pattern: "^\\d{9,11}$"
        password:
          type: string
          minLength: 8
          pattern: "^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{8,}$"
          example: "password1"
        passwordConfirmation:
          type: string
      required: [name, email, phone, password, passwordConfirmation]

    SignInRequest:
      type: object
      properties:
        email:
          type: string
          format: email
        password:
          type: string
          minLength: 8
          pattern: "^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{8,}$"
      required: [email, password]

    MoverProfile:
      type: object
      properties:
        image:
          type: string
          format: uri
        nickName:
          type: string
        career:
          type: integer
          minimum: 0
        introduction:
          type: string
        description:
          type: string
        serviceType:
          type: array
          items:
            type: string
            enum: [SMALL, HOME, OFFICE]
        serviceArea:
          type: array
          items:
            type: string

    ClientProfileUpdate:
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        phone:
          type: string
        password:
          type: string
        newPassword:
          type: string
        newPasswordConfirmation:
          type: string
        profileImage:
          type: string
        serviceType:
          type: array
          items:
            type: string
        livingArea:
          type: array
          items:
            type: string

    EditMoverAccount:
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        phone:
          type: string
        existedPassword:
          type: string
        newPassword:
          type: string
        newPasswordConfirmation:
          type: string

    CreateRequest:
      type: object
      properties:
        moveType:
          type: string
          enum: [SMALL, HOME, OFFICE]
        moveDate:
          type: string
          format: date
        fromAddress:
          type: string
        toAddress:
          type: string

    RequestDraft:
      type: object
      properties:
        moveType:
          type: string
          enum: [SMALL, HOME, OFFICE]
        moveDate:
          type: string
          format: date
        fromAddress:
          type: string
        toAddress:
          type: string
        currentStep:
          type: integer
          minimum: 0
          maximum: 4
      required: [currentStep]

    CreateEstimate:
      type: object
      properties:
        price:
          type: integer
        comment:
          type: string
        requestId:
          type: string
        clientId:
          type: string

    ConfirmEstimate:
      type: object
      properties:
        estimateId:
          type: string

    RejectEstimate:
      type: object
      properties:
        comment:
          type: string
        clientId:
          type: string
        requestId:
          type: string

    CreateReview:
      type: object
      properties:
        estimateId:
          type: string
        rating:
          type: integer
          minimum: 1
          maximum: 5
        content:
          type: string
        moverId:
          type: string

    UpdateReview:
      type: object
      properties:
        rating:
          type: integer
          minimum: 1
          maximum: 5
        content:
          type: string
